generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int     @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String  @unique
  phone           String
  role            role    @default(user)
  password        String
  email_confirmed Boolean @default(false)

  passage       passage[]
  purchase_info purchase_info[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([id, email])
  @@unique([id, first_name])
}

model packages {
  id       Int          @id @default(autoincrement())
  name     String
  title    String
  currency currencyType
  price    Float
  discount Float
  status   Boolean      @default(true)

  purchase_info purchase_info[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([id])
}

model promo_code {
  id                     Int          @id @default(autoincrement())
  code                   String
  discount_type          discountType
  discount_amount        Int
  use_count              Int          @default(0)
  affiliate_amount       Int          @default(0)
  total_affiliate_amount Float        @default(0)
  is_active              Boolean      @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model coupon_code {
  id              Int          @id @default(autoincrement())
  code            String
  discount_type   discountType
  discount_amount Int
  use_count       Int          @default(0)
  is_active       Boolean      @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model purchase_info {
  id         Int @id @default(autoincrement())
  package_id Int
  user_id    Int

  currency        currencyType
  discount_amount Float        @default(00.00)
  amount          Float
  service_charge  String
  card_number     String
  cus_phone       String
  pg_taxnid       String
  mer_txnid       String
  store_amount    String
  bank_txn        String
  card_type       String

  packages packages @relation(fields: [package_id], references: [id])
  user     user     @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model passage {
  id Int @id @default(autoincrement())

  title      String
  passage    String
  summary    String
  level      level
  creator_id Int
  created_by String

  quiz quiz[]

  user user @relation(fields: [creator_id, created_by], references: [id, first_name])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model quiz {
  id       Int     @id @default(autoincrement())
  question String
  opt_a    Boolean @default(false)
  opt_b    Boolean @default(false)
  opt_c    Boolean @default(false)
  opt_d    Boolean @default(false)

  passage_id    Int
  categories_id Int

  passage    passage    @relation(fields: [passage_id], references: [id])
  categories categories @relation(fields: [categories_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model categories {
  id          Int     @id @default(autoincrement())
  title       String
  description String?

  quiz quiz[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum role {
  user
  moderator
  admin
}

enum currencyType {
  BDT
  USD
}

enum discountType {
  flat
  percentage
}

enum level {
  beginner
  intermediate
  advanced
}
